// Breakpoint for responsive design
// - Mobile-first approach
// - @{breakpoint} : which has been static defined at the map
// - Return : return the adaptive condiguration based on the screen size
// - Dart Sass version

$breakpoints: (
  "small-mobile": 320px,
  "mobile": 321px,
  "tablet": 426px,
  "laptop": 992px,
  "large-laptop": 1200px,
);

@mixin design-respond-to($device) {
  @if not map-has-key($map: $breakpoints, $key: $device) {
    @warn ("Unfortunately, no value could be retrieved from `#{$device}` ."
        + "Available breakpoints are : `#{map-keys($map: $breakpoints)}`");
  } @else {
    $value: map-get(
      $map: $breakpoints,
      $key: $device,
    );
    // Cannot apply (max-width: 600px) due to the new Dart Sass version
    @if ($device == "small-mobile") {
      @media (max-width: $value) {
        @content;
      }
    } @else {
      @media (min-width: $value) {
        @content;
      }
    }
  }
}

// Box-shadow mode for interior design
// - @{modes} : which has been static defined at the map
// - Return : return the box-shadow based on the key

$modes: (
  "light": 1px 1px 19px -1px rgba(255, 238, 238, 0.61),
  "dark": 1px 1px 19px -1px rgba(49, 48, 48, 0.61),
);

@mixin generate-box-shadow($mode: "light") {
  @if not map-has-key($map: $modes, $key: $mode) {
    @warn ("Unfortunately, no value could be retrieved from `#{$mode}` ."
        + "Available breakpoints are : `#{map-keys($map: $modes)}`");
  } @else {
    $value: map-get(
      $map: $modes,
      $key: $mode,
    );
    box-shadow: $value;
    @content;
  }
}
